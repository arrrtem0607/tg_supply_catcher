import asyncio
from datetime import datetime, timedelta, timezone

from database.entities.core import Database
from database.entities.models import Mailing, MailingStatus
from database.controller.mailing_controller import MailingController
from services.delay_service.tasks import launch_mailing

from bot.utils.logger import setup_logger

logger = setup_logger("test_mailing")

db = Database()
mailing_ctrl = MailingController(db)

async def main():
    async with db.session() as session:
        # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—É—é —Ä–∞—Å—Å—ã–ª–∫—É
        new_mailing = Mailing(
            text="üß™ –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞",
            scheduled_at=datetime.now(timezone.utc) + timedelta(seconds=10),
            status=MailingStatus.SCHEDULED,
        )
        session.add(new_mailing)
        await session.commit()
        logger.info(f"üì® –¢–µ—Å—Ç–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: ID={new_mailing.id}")

        # –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ: —Å—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞–µ–º –≤—Ä—É—á–Ω—É—é (–∏–Ω–∞—á–µ –ø–æ–¥—Ö–≤–∞—Ç–∏—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫)
        await launch_mailing.kiq(str(new_mailing.id))
        logger.info(f"üöÄ launch_mailing.kiq –≤—ã–∑–≤–∞–Ω –≤—Ä—É—á–Ω—É—é")

if __name__ == "__main__":
    asyncio.run(main())
