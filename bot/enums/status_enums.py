from enum import Enum


class Status(str, Enum):
    """–ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å –º–µ—Ç–æ–¥–∞–º–∏ –ø–µ—Ä–µ–≤–æ–¥–∞."""

    RECEIVED = "received"
    CATCHING = "catching"
    CAUGHT = "caught"
    ERROR = "error"
    CANCELLED = "cancelled"
    PLANNED = "planned"
    IN_PROGRESS = "in_progress"
    COMPLETED = "completed"

    def get_translation(self) -> str:
        """–ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Å—Ç–∞—Ç—É—Å –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫."""
        translations = {
            Status.RECEIVED: "üì• –ü–æ–ª—É—á–µ–Ω–æ",
            Status.CATCHING: "üéØ –õ–æ–≤–∏—Ç—Å—è",
            Status.CAUGHT: "‚úÖ –ü–æ–π–º–∞–Ω–æ",
            Status.ERROR: "‚ùå –û—à–∏–±–∫–∞",
            Status.CANCELLED: "üö´ –û—Ç–º–µ–Ω–µ–Ω–æ",
            Status.PLANNED: "üìå –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ",
            Status.IN_PROGRESS: "‚è≥ –í –ø—Ä–æ—Ü–µ—Å—Å–µ",
            Status.COMPLETED: "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ",
        }
        return translations.get(self, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å")

    @classmethod
    def from_str(cls, value: str) -> "Status | None":
        """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –æ–±—ä–µ–∫—Ç `Status`, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ."""
        try:
            return cls(value.lower())
        except ValueError:
            return None  # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º None
