import operator
from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.kbd import Select, Button
from aiogram_dialog.widgets.text import Jinja
from aiogram_dialog import DialogManager
from aiogram.types import CallbackQuery
from database.controller.ORM import ORMController
from bot.utils.statesform import ManageClientStates, MainMenu

orm_controller = ORMController()

async def get_clients_list(dialog_manager: DialogManager, **kwargs):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞–±–∏–Ω–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    tg_id = dialog_manager.event.from_user.id
    clients = await orm_controller.get_clients_by_user_id(tg_id)

    client_list = [(client.name, client.client_id) for client in clients]

    return {"clients": client_list, "count": len(client_list)}

async def on_client_selected(callback: CallbackQuery, widget, manager: DialogManager, item_id: str):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–∞–±–∏–Ω–µ—Ç–∞"""
    manager.dialog_data["selected_client"] = item_id
    await manager.switch_to(ManageClientStates.CHOOSE_ACTION)

async def on_my_clients(callback: CallbackQuery, widget, manager: DialogManager):
    """–û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–±–∏–Ω–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    await manager.start(ManageClientStates.CHOOSE_CLIENT)

task_dialog = Dialog(
    # –û–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –∫–∞–±–∏–Ω–µ—Ç–∞
    Window(
        Jinja(
            "üë• <b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–±–∏–Ω–µ—Ç:</b>\n\n"
            "{% for client in clients %}üîπ <b>{{ client[0] }}</b> (ID: {{ client[1] }})\n{% endfor %}"
        ),
        Select(
            text=Jinja("üîπ {{ item[0] }}"),
            id="select_client",
            item_id_getter=operator.itemgetter(1),
            items="clients",
            on_click=on_client_selected,
        ),
        Button(Jinja("üîô –ù–∞–∑–∞–¥"), id="back", on_click=lambda c, w, m: m.start(MainMenu.MAIN_MENU)),
        state=ManageClientStates.CHOOSE_CLIENT,
        getter=get_clients_list,
        parse_mode="HTML",
    ),

    # –û–∫–Ω–æ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –Ω–∞–¥ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∫–∞–±–∏–Ω–µ—Ç–æ–º
    Window(
        Jinja(
            "üîπ <b>–í—ã–±—Ä–∞–Ω –∫–∞–±–∏–Ω–µ—Ç:</b> {{ selected_client }}\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        ),
        Button(Jinja("üì¶ –ü–æ—Å—Ç–∞–≤–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞"), id="client_supplies", on_click=lambda c, w, m: m.switch_to(ManageClientStates.CLIENT_SUPPLIES)),
        Button(Jinja("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"), id="update_client", on_click=lambda c, w, m: m.switch_to(ManageClientStates.UPDATE_CLIENT)),
        Button(Jinja("üîô –ù–∞–∑–∞–¥"), id="back", on_click=lambda c, w, m: m.switch_to(ManageClientStates.CHOOSE_CLIENT)),
        state=ManageClientStates.CHOOSE_ACTION,
        parse_mode="HTML",
    ),
)
