import operator
import aiohttp
import requests

from aiogram_dialog import Dialog, Window, ShowMode
from aiogram_dialog.widgets.kbd import Button, Row, Column, Multiselect, ScrollingGroup, ManagedMultiselect
from aiogram_dialog.widgets.text import Jinja, Const, Format
from aiogram_dialog.widgets.input import TextInput, ManagedTextInput
from aiogram_dialog import DialogManager
from aiogram.types import Message, CallbackQuery

from bot.utils.statesform import AddClientStates, MainMenu
from bot.utils.validations import normalize_phone_number
from services.utils.logger import setup_logger

BACKEND_URL = "https://waveapitest.ru"
logger = setup_logger(__name__)

#____________________________
async def on_phone_entered(
    message: Message,
    widget: ManagedTextInput[str],
    dialog_manager: DialogManager,
    phone: str,
):
    phone = normalize_phone_number(phone)
    logger.info(f"üìû –í–≤–µ–¥—ë–Ω –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone}")
    dialog_manager.dialog_data["phone_number"] = phone
    logger.info("üì° –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ SMS-–∫–æ–¥–∞...")

    try:
        res = requests.post(url=BACKEND_URL + "/catcher/send_code", params={'phone_number': phone})
        if res.status_code == 200:
            dialog_manager.dialog_data["phone_number"] = phone
            dialog_manager.dialog_data["sticker"] = res.json()["payload"]['sticker']
            await dialog_manager.switch_to(AddClientStates.ENTER_SMS_CODE, show_mode=ShowMode.DELETE_AND_SEND)
        elif res.status_code == 420:
            await message.answer(res.json()["error"])
        else:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥: {res.status_code} {res.text}")
            await message.answer(f"{res.status_code} {res.text}")
    except Exception as e:
        logger.exception("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ SMS-–∫–æ–¥–∞")
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–¥–∞: {str(e)}")

async def on_phone_error(
    message: Message,
    widget: ManagedTextInput[str],
    dialog_manager: DialogManager,
    error: ValueError,
):
    logger.warning("üö´ –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
    await message.answer("‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +79991234567")

async def on_sms_code_entered(
        message: Message,
        widget: ManagedTextInput[str],
        dialog_manager: DialogManager,
        code: str):
    phone = dialog_manager.dialog_data.get("phone_number")
    sticker = dialog_manager.dialog_data.get("sticker")

    if not phone or not sticker:
        await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ —É—Ç–µ—Ä—è–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–∞—á–∞–ª–∞.")
        return

    try:
        res = requests.post(url=BACKEND_URL + "/catcher/authorize", params={'phone': phone, 'sticker': sticker, 'code': code, 'user_id': dialog_manager.event.from_user.id})
        if res.status_code == 200:
            await dialog_manager.start(MainMenu.MAIN_MENU, show_mode=ShowMode.DELETE_AND_SEND)
        else:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥: {res.status_code} {res.text}")
            await message.answer(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–¥–∞. –ü—Ä–æ–π–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –µ—â–µ —Ä–∞–∑")
            await dialog_manager.switch_to(AddClientStates.ENTER_PHONE, show_mode=ShowMode.DELETE_AND_SEND)
    except Exception as e:
        logger.exception("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ SMS-–∫–æ–¥–∞")
        await dialog_manager.switch_to(AddClientStates.ENTER_PHONE, show_mode=ShowMode.DELETE_AND_SEND)
        #await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–¥–∞: {str(e)}")

async def on_sms_code_error(
    message: Message,
    widget: ManagedTextInput[str],
    dialog_manager: DialogManager,
    error: ValueError,
):
    logger.warning("üö´ –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞")
    await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∫–æ–¥–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")
    await dialog_manager.switch_to(AddClientStates.ENTER_PHONE, show_mode=ShowMode.DELETE_AND_SEND)

add_client_dialog = Dialog(
    Window(
        Jinja(
            "üëã <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤</b>\n\n"
            "üîê –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. "
            "–í—ã –≤–≤–µ–¥—ë—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä, –ø–æ–ª—É—á–∏—Ç–µ SMS-–∫–æ–¥ –æ—Ç Wildberries, –∞ –∑–∞—Ç–µ–º –≤—ã–±–µ—Ä–µ—Ç–µ –∫–∞–±–∏–Ω–µ—Ç—ã –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö.\n\n"
            "üì≤ <b>–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?</b>"
        ),
        Column(
            Button(Const("‚û°Ô∏è –ù–∞—á–∞—Ç—å"), id="start_phone_flow",
                   on_click=lambda c, w, m: m.switch_to(AddClientStates.ENTER_PHONE, show_mode=ShowMode.EDIT)),
            Button(Const("üîô –ù–∞–∑–∞–¥"), id="back", on_click=lambda c, w, m: m.start(MainMenu.MAIN_MENU)),
        ),
        state=AddClientStates.ENTRY_METHOD,
        parse_mode="HTML",
    ),
    Window(
        Const("üìû <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b>\n"
              "<code>+79991234567</code>\n"
              "üì© <i>–ú—ã –æ—Ç–ø—Ä–∞–≤–∏–º –Ω–∞ –Ω–µ–≥–æ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</i>"),
        TextInput(
            id="phone_number",
            type_factory=str,  # –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∫–∞—Å—Ç–æ–º–Ω—ã–π –≤–∞–ª–∏–¥–∞—Ç–æ—Ä
            on_success=on_phone_entered,
            on_error=on_phone_error,
        ),
        Row(
            Button(Const("üîô –ù–∞–∑–∞–¥"), id="back", on_click=lambda c, w, m: m.switch_to(AddClientStates.ENTRY_METHOD, show_mode=ShowMode.EDIT)),
        ),
        state=AddClientStates.ENTER_PHONE,
        parse_mode="HTML",
    ),
    Window(
        Jinja(
            "üì≤ <b>–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ SMS –æ—Ç WildBerries –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤</b>\n\n"
        ),
        TextInput(
            id="sms_code",
            type_factory=str,
            on_success=on_sms_code_entered,
            on_error=on_sms_code_error,
        ),
        Row(
            Button(Const("üîô –ù–∞–∑–∞–¥"), id="back", on_click=lambda c, w, m: m.switch_to(AddClientStates.ENTER_PHONE, show_mode=ShowMode.EDIT)),
        ),
        state=AddClientStates.ENTER_SMS_CODE,
        parse_mode="HTML",
    ),
)
