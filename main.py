import asyncio

from aiogram import Bot, Dispatcher
from aiogram.types import BotCommand
from aiogram.client.default import DefaultBotProperties
from aiogram.fsm.storage.redis import RedisStorage, DefaultKeyBuilder, Redis
from aiogram_dialog import setup_dialogs

from configurations import get_config
from bot import get_all_routers
from services.utils.logger import setup_logger
from bot.middlewares.db_middleware import initialize_database

logger = setup_logger(__name__)

async def setup_bot_commands(bot: Bot):
    commands = [
        BotCommand(command="/start", description="Start the bot / –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
        BotCommand(command="/menu", description="Main menu / –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
        BotCommand(command="/language", description="Change language / –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"),
        BotCommand(command="/drop_tables", description="‚ö†Ô∏è –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã (dev only)"),
        BotCommand(command="/truncate_tables", description="üßπ –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã (dev only)"),
    ]
    await bot.set_my_commands(commands)

async def main():
    config = get_config()

    redis = Redis(host="localhost")
    key_builder = DefaultKeyBuilder(with_destiny=True)
    storage = RedisStorage(redis=redis, key_builder=key_builder)

    bot = Bot(
        token=config.bot_config.get_token(),
        default=DefaultBotProperties(parse_mode="HTML")
    )
    dp = Dispatcher(storage=storage)

    dp.include_router(await get_all_routers())
    setup_dialogs(dp)

    await setup_bot_commands(bot)
    await initialize_database()
    logger.info("‚úÖ –¢–∞–±–ª–∏—Ü—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã/—Å–æ–∑–¥–∞–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!")
    logger.info("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")

    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
